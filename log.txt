【登录php流程】
---------------------------------------
数据有效性验证
	通过 -- 提交
		用户名不存在 -- 1
		密码不对 -- 2
		用户匹配 -- 0
		数据库错误 -- 3
	不通过 -- 返回验证问题 -- 4
---------------------------------------


【进度】
---------------------------------------

列表--详情 SPA 页
	详情表单数据--显示同步（“编辑”、“新增” 切换时，只需改变 data.curData ）
		jquery.fn.databind(data, property) 扩展 ( 为实现详情表单的数据--显示同步 )

---------------------------------------


【9-30】
---------------------------------------
1. 初步了解 knockout.js， 感觉本项目不需要， 所有代码可以纯手工写出， 也许这样更省时间。 

2. spa 框架也许需要，因为这个功能更通用， 应该有框架， 自己写代码意义不大？ 
   但spa代码并不多，引入一个库通常太大。 且我的spa代码在宽屏下是分两列显示的， 普通spa框架能否支持?
   不使用框架，手工写。

3. 未授权：
	页面：跳转到登录页（此段js代码与其他数据代码合并，单独写一个js更容易被禁用）
		 


	数据： 返回错误提示（此错误提示也会触发js跳转到登录页）



---------------------------------------


【10-1】
---------------------------------------
1. 完成 authTest.html 
   
   登录状态，客户端检测、服务端检测应保持一致的结果，因此应放在一起。

   试验： 效果不好， 服务端认证应用于控制数据请求， 应附加在每个数据请求中， 不便独立
   思路： js 对象仅解决客户端检测 -- clientAuth 

---------------------------------------

【10-2】
---------------------------------------
1. authTest.html 就算完成了， 
	
	结果： clientAuth 仅封装客户端认证、未登录跳转， 服务端认证附加在每次请求上。
	优化： 自动检测， 登陆失效即刻退出？ 

2. 逐步实现： 用户管理 userAdmin.html 

	用户列表， 新增用户，修改用户， 修改密码， 

---------------------------------------

【10-3】
---------------------------------------
1. 需要保护的页面， 引用（调用、启动）watchdog，

	其他页面， 可修改保护页面

2. 方案2（简单）： 受保护页面包含 watchdog 代码， 非保护页不用包含。

	经测试， 此方案简单易行，效果良好。 检测间隔3s足够了。

3. 进入下一步： 用户管理（user-admin.html）

	1) 现有页面设计清爽， 代码已模块化， 局部修改补充是完全有可能的， 如果整体重做，工作量太大

	2）单独实现详情表单模块，测试代码架构 ->
---------------------------------------


 [10-4] 
 --------------------------------------
 	完成， frmDetailTest.html 基本没问题 

3）重写详情表单模块， 并整合进入主体页面

4）还想重新写 user-admin.html 页， 因spa部分、frmDetail部分都有优化空间

5) 登录页也有问题： 登录失败无法再次登录 -> html、CSS 沿用已有代码， 只重写 js

[10-5]
---------------------------------------
重写所有页面： 

1) login.js








